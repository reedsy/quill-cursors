import IQuillCursorsOptions from './i-quill-cursors-options';
import IQuillRange from './i-range';
export default class Cursor {
    static readonly CONTAINER_ELEMENT_TAG = "SPAN";
    static readonly SELECTION_ELEMENT_TAG = "SPAN";
    static readonly CURSOR_CLASS = "ql-cursor";
    static readonly SELECTION_CLASS = "ql-cursor-selections";
    static readonly SELECTION_BLOCK_CLASS = "ql-cursor-selection-block";
    static readonly CARET_CLASS = "ql-cursor-caret";
    static readonly CARET_CONTAINER_CLASS = "ql-cursor-caret-container";
    static readonly CONTAINER_HOVER_CLASS = "hover";
    static readonly CONTAINER_NO_POINTER_CLASS = "no-pointer";
    static readonly FLAG_CLASS = "ql-cursor-flag";
    static readonly FLAG_FLIPPED_CLASS = "flag-flipped";
    static readonly NAME_CLASS = "ql-cursor-name";
    static readonly HIDDEN_CLASS = "hidden";
    static readonly NO_DELAY_CLASS = "no-delay";
    readonly id: string;
    readonly name: string;
    readonly color: string;
    range: IQuillRange;
    private _el;
    private _selectionEl;
    private _caretEl;
    private _flagEl;
    private _hideDelay;
    private _hideSpeedMs;
    private _positionFlag;
    constructor(id: string, name: string, color: string);
    build(options: IQuillCursorsOptions): HTMLElement;
    show(): void;
    hide(): void;
    remove(): void;
    toggleNearCursor(pointX: number, pointY: number): boolean;
    toggleFlag(shouldShow?: boolean): void;
    updateCaret(rectangle: ClientRect, container: ClientRect): void;
    updateSelection(selections: ClientRect[], container: ClientRect): void;
    private _setHoverState;
    private _toggleOpenedCursor;
    private _getCoordinates;
    private _updateCaretFlag;
    private _clearSelection;
    private _addSelection;
    private _selectionBlock;
    private _sortByDomPosition;
    private _sanitize;
    private _serialize;
}
